/*
Regra vinculada a´pos inserir e após alterar: 

A regra irá verificar se o campo R017CAR.DatIni é referente a uma nova data em 
comparação a ultima registrada, se for, irá realizar um INSERT na tabela customizada 
USU_THisDir, gerando um novo historico de diretoria para o colaborador

Obs.: Para verificar o historico, acessar: Personalizadas > Historico Diretoria 

Evanderson Pereira/ Mateus Ferreira / Gustavo Mocelin 
CH - 237462
07/04/2025
*/

Se(VerificaAbaAtiva("Características") = 1){
  Definir Cursor C_R017CAR;
  Definir Cursor C_R017CARpe;
  Definir Cursor C_R034FUN;
  Definir Cursor C_USU_THisDir;
  Definir Alfa aPosTra;
  Definir Data dDatHoj;
  Definir Data dDatUm;
  Definir Data dDatDois;
  Definir Data dDatIniTela;
  Definir Data dDatZer;
  
  dDatHoj = DatHoj;
  nEstPos = R017CAR.EstPos;
  aPosTra = R017CAR.PosTra;
  nNumEmp = R017CAR.NumEmp;
  nCodFil = R017CAR.CodFil;
  nCodDir = R017CAR.USU_CodDir;
  dDatIniTela = R017CAR.DatIni;
  
  MontaData(31,12,1900, dDatZer);
  
  @ Cursor para verificar o posto de trabalho @
  Definir Cursor C_R017POS;
  Definir Alfa aPosTraPos;
  C_R017POS.SQL"SELECT POSTRA FROM R017POS WHERE ESTPOS = :nEstPos AND POSTRA = :aPosTra";
  C_R017POS.AbrirCursor()
  Se(C_R017POS.Achou){
    aPosTraPos = C_R017POS.PosTra;   
  }
  C_R017POS.FecharCursor();


  @ Atualização - CH 237713 - Evanderson Pereira @
  @ Podem haver casos onde está sendo incluindo uma nova caracteristica em um posto @
  @ que possui um colaborador demitido alocado, neste caso não deve ser gerado o insert @
  @ na tabela de historicos @
      
  @ Cursor para verificar os colaboradores alocados no posto @
  Definir Cursor cBuscaPosto; 
  cBuscaPosto.SQL"SELECT NUMEMP, TIPCOL, NUMCAD, SITAFA FROM R034FUN WHERE ESTPOS = :nEstPos AND POSTRA = :aPosTra";
  cBuscaPosto.AbrirCursor()
  Enquanto(cBuscaPosto.Achou){
      nNumEmp = cBuscaPosto.NumEmp;
      nTipCol = cBuscaPosto.TipCol;
      nNumCad = cBuscaPosto.NumCad;
      nSitAfa = cBuscaPosto.SitAfa;
      
      @ Caso tenha algum colaborador alocado que esteja ativo, vai precisar seguir a regra normalmente, @
      @ senao, vai apenas pular pora o proximo registro @
      Se(nSitAfa <> 7) { 
        
        @ Verifica o codigo presente na R034FUN @
        Definir Cursor C_R034FUN;
        C_R034FUN.SQL"SELECT NUMEMP, TIPCOL, NUMCAD \
                        FROM R034FUN                \
                        WHERE ESTPOS = :nEstPos      \
                          AND POSTRA = :aPosTra      \
                          AND NUMEMP = :nNumEmp      \
                          AND CODFIL = :nCodFil      \
                          AND SITAFA <> 7";
        C_R034FUN.AbrirCursor();                       
        Se(C_R034FUN.Achou){
          nTipCol = C_R034FUN.TipCol;
          nNumCad = C_R034FUN.NumCad;
        } 
        C_R034FUN.FecharCursor(); 
        
        @ Esse cursor deve buscar a ultima data de caracteristica @ 
        C_R017CAR.SQL"SELECT DATINI             \
                        FROM R017CAR            \
                        WHERE ESTPOS = :nEstPos  \
                          AND POSTRA = :aPosTra  \
                          AND NUMEMP = :nNumEmp  \
                          AND CODFIL = :nCodFil  \
                          AND DATINI = (SELECT MAX(DATINI)          \
                                          FROM R017CAR TAB2         \
                                        WHERE ESTPOS = :nEstPos    \
                                          AND POSTRA = :aPosTra    \
                                          AND NUMEMP = :nNumEmp    \
                                          AND CODFIL = :nCodFil    \
                                          AND DATINI <= :dDatHoj)";
                                        
        C_R017CAR.AbrirCursor();
        Se(C_R017CAR.Achou){
          Definir Data dDatIniCar;
          dDatIniCar = C_R017CAR.datini;
        }
        Senao {
          dDatIniCar = dDatZer;       
        }
        C_R017CAR.FecharCursor();
        
        
        @ Verifica se a ultima data de caracteristica é vazia, se for é porque é um cadastro de um novo posto @
        Se(dDatIniCar = dDatZer){
          Vapara FinalRegra;
        }
        
        @ Se a data datini da caracteristica for diferente da anterior @ 
        Se(dDatIniTela <> dDatIniCar){
        
          @Vai ser necessario fazer o insert na tabela de historico@
          C_USU_THisDir.SQL"SELECT USU_NUMEMP            \
                              FROM USU_THisDir           \
                              WHERE USU_NUMEMP = :nNumEmp \
                              AND USU_TIPCOL = :nTipCol \
                              AND USU_NUMCAD = :nNumCad \
                              AND USU_DatAlt = :dDatHoj \
                              AND USU_CodDir = :nCodDir";
          C_USU_THisDir.AbrirCursor();
          Se(C_USU_THisDir.NaoAchou){                     
              EXECSQL"INSERT INTO USU_THisDir VALUES(:nNumEmp,:nTipCol,:nNumCad,:dDatIniTela,:nCodDir,40)";
          }
          C_USU_THisDir.FecharCursor(); 
        }
        Senao Se (dDatIniTela = dDatIniCar) {
          x=0; @ Não faz nada @
        }
      }

      @ Vapara em casos de novos postos @
      FinalRegra:

      cBuscaPosto.Proximo();

      cBuscaPosto.FecharCursor();
  }
}
  