Definir Alfa CUR_R017CAR;
Definir Alfa aMsgRet;               
Definir Alfa aSqlAux;                                                      
Definir Alfa aPosTra;
Definir Alfa aCodCar;
Definir Alfa aCodCcu;
Definir Alfa aPosTra;
Definir Alfa aVarCar;

Definir Numero nNumEmp;
Definir Numero nCodCat;
Definir Numero nCodCoo;
Definir Numero nCodDir;
Definir Numero nCodEqp;
Definir Numero nCodEsc;
Definir Numero nCodFas;
Definir Numero nCodFil;
Definir Numero nCodGer;
Definir Numero nCodHie;
Definir Numero nCodMac;
Definir Numero nCodMic;
Definir Numero nCodOem;
Definir Numero nCodPrj;
Definir Numero nCodRat;
Definir Numero nCodSin;
Definir Numero nCodSup;
Definir Numero nCodTma;
Definir Numero nCodVin;
Definir Numero nEstCar;
Definir Numero nEstPos;
Definir Numero nHorBas;
Definir Numero nHorDsr;
Definir Numero nHorSab;
Definir Numero nHorSem;
Definir Numero nNatDes;
Definir Numero nNumEmp;
Definir Numero nNumLoc;
Definir Numero nPerPne;
Definir Numero nTabOrg;
Definir Numero nTipCol;
Definir Numero nTipCon;
Definir Numero nTipVag;
Definir Numero nTurInt;
Definir Numero nTurPos;

Definir Data dPerIni;
Definir Data dPerFin;
Definir Data dDatIni;
Definir Data dDatFin;

aMsgRet = "OK";
aSqlAux = "";

dPerIni = caracteristicaPosto.datIni;
dPerFin = caracteristicaPosto.datFin;

Se(dPerIni = 0) {
  aMsgRet = "Informar a Data Inicial através do parâmetro datIni.";
  VaPara FinalRegra;
}
Senao Se(dPerFin = 0) {
  aMsgRet = "Informar a Data Final através do parâmetro datFin.";
  VaPara FinalRegra;
}
Senao Se(dPerIni > dPerFin) {
  aMsgRet = "Data Inicial não pode ser maior que a Data Final.";
  VaPara FinalRegra;
}

aSqlAux = "SELECT estpos, postra, datini, numemp, codfil, \
                  taborg, numloc, codccu, varcar, estcar, \
                  codcar, codsin, codhie, tipcol, turpos, \
                  codvin, tipvag, tipcon, perpne, datfim, \
                  codesc, codtma, turint, codeqp, codcat, \
                  horbas, horsab, horsem, hordsr, natdes, \
                  codprj, codfas, codoem, codrat, usu_coddir, \
                  usu_codmac, usu_codmic, usu_codger, usu_codcoo, \
                  usu_codsup, usu_codclu \
             FROM R017CAR \                                
            WHERE DatIni >= :dPerIni \                      
              AND DatIni <= :dPerFin \                                  
            ORDER By EstPos, PosTra, DatIni, NumEmp";     

SQL_Criar(CUR_R017CAR);
SQL_UsarSQLSenior2(CUR_R017CAR, 0);
SQL_UsarAbrangencia(CUR_R017CAR, 0);
SQL_DefinirComando(CUR_R017CAR, aSqlAux); 

SQL_DefinirData(CUR_R017CAR, "dPerIni", dPerIni);
SQL_DefinirData(CUR_R017CAR, "dPerFin", dPerFin);

SQL_AbrirCursor(CUR_R017CAR);
Enquanto(SQL_EOF(CUR_R017CAR) = 0) { 
  aCodCar = "";
  aCodCcu = "";
  aPosTra = "";
  aVarCar = "";
  
  nCodCat = 0;
  nCodCoo = 0;
  nCodDir = 0;
  nCodEqp = 0;
  nCodEsc = 0;
  nCodFas = 0;
  nCodFil = 0;
  nCodGer = 0;
  nCodHie = 0;
  nCodMac = 0;
  nCodMic = 0;
  nCodOem = 0;
  nCodPrj = 0;
  nCodRat = 0;
  nCodSin = 0;
  nCodSup = 0;
  nCodTma = 0;
  nCodVin = 0;
  nEstCar = 0;
  nEstPos = 0;
  nHorBas = 0;
  nHorDsr = 0;
  nHorSab = 0;
  nHorSem = 0;
  nNatDes = 0;
  nNumEmp = 0;
  nNumLoc = 0;
  nPerPne = 0;
  nTabOrg = 0;
  nTipCol = 0;
  nTipCon = 0;
  nTipVag = 0;
  nTurInt = 0;
  nTurPos = 0;
  nCodClu = 0;

  dDatIni = 0;
  dDatFim = 0;
  
  SQL_RetornarData(CUR_R017CAR, "datini", dDatIni);
  SQL_RetornarData(CUR_R017CAR, "datfim", dDatFim);
  
  SQL_RetornarInteiro(CUR_R017CAR, "codcat", nCodCat);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_codcoo", nCodCoo);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_coddir", nCodDir);
  SQL_RetornarInteiro(CUR_R017CAR, "codeqp", nCodEqp);
  SQL_RetornarInteiro(CUR_R017CAR, "codesc", nCodEsc);
  SQL_RetornarInteiro(CUR_R017CAR, "codfas", nCodFas);
  SQL_RetornarInteiro(CUR_R017CAR, "codfil", nCodFil);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_codger", nCodGer);
  SQL_RetornarInteiro(CUR_R017CAR, "codhie", nCodHie);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_codmac", nCodMac);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_codmic", nCodMic);
  SQL_RetornarInteiro(CUR_R017CAR, "codoem", nCodOem);
  SQL_RetornarInteiro(CUR_R017CAR, "codprj", nCodPrj);
  SQL_RetornarInteiro(CUR_R017CAR, "codrat", nCodRat);
  SQL_RetornarInteiro(CUR_R017CAR, "codsin", nCodSin);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_codsup", nCodSup);
  SQL_RetornarInteiro(CUR_R017CAR, "codtma", nCodTma);
  SQL_RetornarInteiro(CUR_R017CAR, "codvin", nCodVin);
  SQL_RetornarInteiro(CUR_R017CAR, "estcar", nEstCar);
  SQL_RetornarInteiro(CUR_R017CAR, "estpos", nEstPos);
  SQL_RetornarInteiro(CUR_R017CAR, "horbas", nHorBas);
  SQL_RetornarInteiro(CUR_R017CAR, "hordsr", nHorDsr);
  SQL_RetornarInteiro(CUR_R017CAR, "horsab", nHorSab);
  SQL_RetornarInteiro(CUR_R017CAR, "horsem", nHorSem);
  SQL_RetornarInteiro(CUR_R017CAR, "natdes", nNatDes);
  SQL_RetornarInteiro(CUR_R017CAR, "numemp", nNumEmp);
  SQL_RetornarInteiro(CUR_R017CAR, "numloc", nNumLoc);
  SQL_RetornarInteiro(CUR_R017CAR, "perpne", nPerPne);
  SQL_RetornarInteiro(CUR_R017CAR, "taborg", nTabOrg);
  SQL_RetornarInteiro(CUR_R017CAR, "tipcol", nTipCol);
  SQL_RetornarInteiro(CUR_R017CAR, "tipcon", nTipCon);
  SQL_RetornarInteiro(CUR_R017CAR, "tipvag", nTipVag);
  SQL_RetornarInteiro(CUR_R017CAR, "turint", nTurInt);
  SQL_RetornarInteiro(CUR_R017CAR, "turpos", nTurPos);
  SQL_RetornarInteiro(CUR_R017CAR, "usu_codclu", nCodClu);

  SQL_RetornarAlfa(CUR_R017CAR, "codcar", aCodCar);
  SQL_RetornarAlfa(CUR_R017CAR, "codccu", aCodCcu);
  SQL_RetornarAlfa(CUR_R017CAR, "postra", aPosTra);
  SQL_RetornarAlfa(CUR_R017CAR, "varcar", aVarCar);
  
  
  @Tratamento adicional@
  Definir Cursor Cur_R016HIE;
  Definir Cursor Cur_R016ORN;
  Definir Alfa aCodLoc;
  Definir Alfa aNomLoc;
  Cur_R016HIE.Sql "SELECT CodLoc \
                     FROM R016HIE \
                    WHERE TabOrg = :nTabOrg \
                      AND NumLoc = :nNumLoc";
  Cur_R016HIE.AbrirCursor();
  Se (Cur_R016HIE.Achou)
    aCodLoc = Cur_R016HIE.CodLoc;
  
  Cur_R016HIE.FecharCursor();

  Cur_R016ORN.Sql "SELECT NomLoc \
                     FROM R016ORN \
                    WHERE TabOrg = :nTabOrg \
                      AND NumLoc = :nNumLoc";
  Cur_R016ORN.AbrirCursor();
  Se (Cur_R016ORN.Achou)
    aNomLoc = Cur_R016ORN.NomLoc;
  Cur_R016ORN.FecharCursor();
  
  
  
  @ =================================================== @
  @ CH - 229177 - Inclusão de campos para retorno do WS @
  @ Evanderson Pereira * 10/10/2024                     @
  @ =================================================== @
  
  /*
  Campos solicitados: 
  Porta - caracteristicaPosto 
  
  * DESCRIÇÃO DO CARGO
  * DESCRIÇÃO DO CENTRO DE CUSTO
  * DESCRIÇÃO DA DIRETORIA
  * DESCRIÇÃO DA NATUREZA DESPESA
  * DESCRIÇÃO DO TIPO DE CONTRATO
  * Código do Cluster
  * Nome do Cluster
  * Nome da Empresa
  * Nome da Filial
  * Código da Famila do Cargo (R024CAR)
  * Nome da Familia do Cargo (R024CAR)
  */
  
  Definir Alfa aTitCar;
  Definir Alfa aNomFam;
  Definir Alfa aNomCcu;
  Definir Alfa aNomDir;
  Definir Alfa aNomNat;
  Definir Alfa aNomClu;
  Definir Alfa aNomEmp; 
  Definir Alfa aNomFil;
  Definir Alfa aTipCon;
  Definir Alfa xTipCon;
  
  
  aTitCar = "";
  aNomFam = "";
  aNomCcu = "";
  aNomDir = "";
  aNomNat = "";
  aNomClu = "";
  aNomEmp = "";
  aNomFil = "";
  aTipCon = "";
  xTipCon = "";
  

  @ Busca Descrição do cargo / Cód da familia do cargo @
  Definir Cursor cBuscaCargo;
  cBuscaCargo.SQL"SELECT TITCAR, USU_CODFAM FROM R024CAR WHERE ESTCAR = :nEstCar AND CODCAR = :aCodCar";
  cBuscaCargo.AbrirCursor()
  Se(cBuscaCargo.Achou){
    aTitCar = cBuscaCargo.TITCAR;
    nCodFam = cBuscaCargo.USU_CODFAM;
  }
  cBuscaCargo.FecharCursor();
  
  
  @ Busca Descrição Familia do cargo @
  Definir Cursor cBuscaDesFamlia;
  cBuscaDesFamlia.SQL"SELECT USU_DESFAM FROM USU_T024FAM WHERE USU_CODFAM = :nCodFam"; 
  cBuscaDesFamlia.AbrirCursor()
  Se(cBuscaDesFamlia.Achou){
    aNomFam = cBuscaDesFamlia.USU_DESFAM;            
  }
  cBuscaDesFamlia.FecharCursor();
  
  
  @ Busca descrição do centro de custo @
  Definir Cursor cBuscaCCU; 
  cBuscaCCU.SQL"SELECT NOMCCU FROM R018CCU WHERE NUMEMP = :nNumEmp AND CODCCU = :aCodCcu";
  cBuscaCCU.AbrirCursor()
  Se(cBuscaCCU.Achou){
    aNomCcu = cBuscaCCU.NOMCCU; 
  }
  cBuscaCCU.FecharCursor();


  @ Busca Descrição da diretoria @
  Definir Cursor cBuscaDir;
  cBuscaDir.SQL"SELECT USU_DESDIR FROM USU_TCADDIR WHERE USU_CODDIR = :nCodDir";
  cBuscaDir.AbrirCursor()
  Se(cBuscaDir.Achou){
    aNomDir = cBuscaDir.USU_DESDIR;   
  }
  cBuscaDir.FecharCursor();


  @ Busca descrição Natureza de despesa @
  Definir Cursor cBuscaNat;
  cBuscaNat.SQL"SELECT NOMNAT FROM R048NAT WHERE NATDES = :nNatDes";
  cBuscaNat.AbrirCursor()
  Se(cBuscaNat.Achou){
    aNomNat = cBuscaNat.NOMNAT;  
  }
  cBuscaNat.FecharCursor();
  
  
  @ Busca o nome do Cluster @
  Definir Cursor cBuscaCluster;
  cBuscaCluster.SQL"SELECT USU_DESCLU FROM USU_TCADCLU WHERE USU_CODCLU = :nCodClu";
  cBuscaCluster.AbrirCursor()
  Se(cBuscaCluster.Achou){
    aNomClu = cBuscaCluster.USU_DESCLU;   
  }
  cBuscaCluster.FecharCursor();
  
  
  @ Busca o nome da empresa @
  Definir Cursor cBuscaEmpresa;
  cBuscaEmpresa.SQL"SELECT NOMEMP FROM R030EMP WHERE NUMEMP = :nNumEmp";
  cBuscaEmpresa.AbrirCursor()
  Se(cBuscaEmpresa.Achou){
    aNomEmp = cBuscaEmpresa.NOMEMP;    
  }
  cBuscaEmpresa.FecharCursor();
  
  
  @ Busca nome da Filial @
  Definir Cursor cBuscaFilial;
  cBuscaFilial.SQL"SELECT NOMFIL FROM R030FIL WHERE NUMEMP = :nNumEmp AND CODFIL = :nCodFil";
  cBuscaFilial.AbrirCursor()
  Se(cBuscaFilial.Achou){
    aNomFil = cBuscaFilial.NOMFIL;   
  }
  cBuscaFilial.FecharCursor();    
  
  
  @ Tratamento - Descrição do tipo de contrato @
  @ Formata o nTipCon como string @
  xTipCon = Formatar(nTipCon,"%0.0f");
  DescItemLista("LTipCon",xTipCon,aTipCon);
  
  Se(aTipCon = ""){
    aTipCon = " ";
  } 
    
  
    @ Retorno do WS @
    caracteristicaPosto.retorno.CriarLinha();
    caracteristicaPosto.retorno.CodLoc = aCodLoc;
	caracteristicaPosto.retorno.NomLoc = aNomLoc;
    caracteristicaPosto.retorno.estpos = nEstPos;
    caracteristicaPosto.retorno.postra = aPosTra;
    caracteristicaPosto.retorno.datini = dDatIni;
    caracteristicaPosto.retorno.numemp = nNumEmp;
    caracteristicaPosto.retorno.nomemp = aNomEmp;
    caracteristicaPosto.retorno.codfil = nCodFil;
    caracteristicaPosto.retorno.nomfil = aNomFil;
    caracteristicaPosto.retorno.taborg = nTabOrg;
    caracteristicaPosto.retorno.numloc = nNumLoc;
    caracteristicaPosto.retorno.codccu = aCodCcu;
    caracteristicaPosto.retorno.nomccu = aNomCcu;
    caracteristicaPosto.retorno.varcar = aVarCar;
    caracteristicaPosto.retorno.estcar = nEstCar;
    caracteristicaPosto.retorno.codcar = aCodCar;
    caracteristicaPosto.retorno.descar = aTitCar;
    caracteristicaPosto.retorno.codfam = nCodFam;
    caracteristicaPosto.retorno.nomfam = aNomFam;
    caracteristicaPosto.retorno.codsin = nCodSin;
    caracteristicaPosto.retorno.codhie = nCodHie;
    caracteristicaPosto.retorno.tipcol = nTipCol;
    caracteristicaPosto.retorno.turpos = nTurPos;
    caracteristicaPosto.retorno.codvin = nCodVin;
    caracteristicaPosto.retorno.tipvag = nTipVag;
    caracteristicaPosto.retorno.tipcon = nTipCon;
    caracteristicaPosto.retorno.descon = aTipCon;
    caracteristicaPosto.retorno.perpne = nPerPne;
    caracteristicaPosto.retorno.datfim = dDatFim;
    caracteristicaPosto.retorno.codesc = nCodEsc;
    caracteristicaPosto.retorno.codtma = nCodTma;
    caracteristicaPosto.retorno.turint = nTurInt;
    caracteristicaPosto.retorno.codeqp = nCodEqp;
    caracteristicaPosto.retorno.codcat = nCodCat;
    caracteristicaPosto.retorno.horbas = nHorBas;
    caracteristicaPosto.retorno.horsab = nHorSab;
    caracteristicaPosto.retorno.horsem = nHorSem;
    caracteristicaPosto.retorno.hordsr = nHorDsr;
    caracteristicaPosto.retorno.natdes = nNatDes;
    caracteristicaPosto.retorno.nomnat = aNomNat; 
    caracteristicaPosto.retorno.codprj = nCodPrj;
    caracteristicaPosto.retorno.codfas = nCodFas;
    caracteristicaPosto.retorno.codoem = nCodOem;
    caracteristicaPosto.retorno.codrat = nCodRat;
  
    @ Novos campos @
    caracteristicaPosto.retorno.usu_coddir = nCodDir;
    caracteristicaPosto.retorno.usu_desdir = aNomDir; 
    caracteristicaPosto.retorno.usu_codmac = nCodMac;
    caracteristicaPosto.retorno.usu_codmic = nCodMic;
    caracteristicaPosto.retorno.usu_codger = nCodGer;
    caracteristicaPosto.retorno.usu_codcoo = nCodCoo;
    caracteristicaPosto.retorno.usu_codsup = nCodSup; 
    caracteristicaPosto.retorno.usu_codclu = nCodClu; 
    caracteristicaPosto.retorno.usu_nomclu = aNomClu;
  
  SQL_Proximo(CUR_R017CAR);  
}
SQL_FecharCursor(CUR_R017CAR);
SQL_Destruir(CUR_R017CAR);  

FinalRegra:

caracteristicaPosto.execucao = aMsgRet;