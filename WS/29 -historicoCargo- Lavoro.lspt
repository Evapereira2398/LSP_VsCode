Definir Alfa CUR_R038HCA;
Definir Alfa aMsgRet;
Definir Alfa aSqlAux;
Definir Alfa aCodCar;
Definir Alfa aCarVag;
Definir Alfa aFunEso;

Definir Numero nNumEmp;
Definir Numero nTipCol;
Definir Numero nNumCad;

Definir Data dAltIni;
Definir Data dAltFin;
Definir Data dDatAlt;

aMsgRet = "OK";
aSqlAux = "";

dAltIni = historicoCargo.AltIni;
dAltFin = historicoCargo.AltFin;

Se(dAltIni = 0) {
  aMsgRet = "Informar a Data Inicial de Afastamento através do parâmetro altIni."; 
  VaPara FinalRegra;
}
Senao Se(dAltFin = 0) {
  aMsgRet = "Informar a Data Final de Afastamento através do parâmetro altFin.";
  VaPara FinalRegra;
}
Senao Se(dAltIni > dAltFin) {
  aMsgRet = "Data Inicial não pode ser maior que a Data Final.";
  VaPara FinalRegra;
}

aSqlAux = "SELECT numemp, tipcol, numcad, datalt, estcar, \                                                
                  codcar, codmot, stahis, carvag, codcrr, \                                               
                  funeso                                  \             
             FROM R038HCA                                 \                                               
            WHERE DatAlt >= :dAltIni                      \                                              
              AND DatAlt <= :dAltFin                      \
            ORDER BY NumEmp, TipCol, NumCad, DatAlt";

SQL_Criar(CUR_R038HCA);
SQL_UsarSQLSenior2(CUR_R038HCA, 0);
SQL_UsarAbrangencia(CUR_R038HCA, 0);
SQL_DefinirComando(CUR_R038HCA, aSqlAux); 

SQL_DefinirData(CUR_R038HCA, "dAltIni", dAltIni);
SQL_DefinirData(CUR_R038HCA, "dAltFin", dAltFin);

SQL_AbrirCursor(CUR_R038HCA);
Enquanto(SQL_EOF(CUR_R038HCA) = 0) { 
  
  dDatAlt = 0;    
  nNumEmp = 0;
  nTipCol = 0;
  nNumCad = 0;
  nEstCar = 0;
  nCodMot = 0;
  nStaHis = 0;
  nCodCrr = 0; 
  aCodCar = "";
  aCarVag = "";
  aFunEso = "";
    
  SQL_RetornarData(CUR_R038HCA, "datalt", dDatAlt);
  SQL_RetornarInteiro(CUR_R038HCA, "numemp", nNumEmp);
  SQL_RetornarInteiro(CUR_R038HCA, "tipcol", nTipCol);
  SQL_RetornarInteiro(CUR_R038HCA, "numcad", nNumCad);
  SQL_RetornarInteiro(CUR_R038HCA, "estcar", nEstCar);
  SQL_RetornarInteiro(CUR_R038HCA, "codmot", nCodMot);
  SQL_RetornarInteiro(CUR_R038HCA, "stahis", nStaHis);
  SQL_RetornarInteiro(CUR_R038HCA, "codcrr", nCodCrr);
  SQL_RetornarAlfa(CUR_R038HCA, "codcar", aCodCar);
  SQL_RetornarAlfa(CUR_R038HCA, "carvag", aCarVag);
  
  
  @ ================================================================ @
  @ ============ INCLUSÃO DOS NOVOS CAMPOS PARA RETORNO ============ @
  @ ================================================================ @
  
  
  @ ================================== @
  @ CH - 229177 -                      @
  @ Evanderson Pereira * 10/10/2024    @
  @ ================================== @
  
  /*
  Campos solicitados: 
  Porta - historicoCargo
  
  * Nome da empresa
  * Descrição do Cargo
  * Descrição do Motivo
  * Código da Familia do cargo
  * Nome da Família do Cargo
  */
  
  
  Definir Alfa aNomEmp;
  Definir Alfa aTitCar;
  Definir Alfa aDesMot; 
  Definir Alfa aNomFam;  
  
  aNomEmp = "";
  aTitCar = "";
  aDesMot = "";
  aNomFam = "";
  nCodFam = 0;  


  @ Busca o nome da empresa @
  Definir Cursor cBuscaEmpresa; 
  cBuscaEmpresa.SQL"SELECT NOMEMP FROM R030EMP WHERE NUMEMP = :nNumEmp";
  cBuscaEmpresa.AbrirCursor()
  Se(cBuscaEmpresa.Achou){
    aNomEmp = cBuscaEmpresa.NOMEMP;    
  }
  cBuscaEmpresa.FecharCursor();


  @ Busca Descrição do cargo @
  Definir Cursor cBuscaCargo;
  cBuscaCargo.SQL"SELECT TITCAR, USU_CODFAM FROM R024CAR WHERE ESTCAR = :nEstCar AND CODCAR = :aCodCar";
  cBuscaCargo.AbrirCursor()
  Se(cBuscaCargo.Achou){
    aTitCar = cBuscaCargo.TITCAR;
    nCodFam = cBuscaCargo.USU_CodFam;  
  }
  cBuscaCargo.FecharCursor();
  
  @ Busca Descrição Familia do cargo @
  Definir Cursor cBuscaDesFamlia;
  cBuscaDesFamlia.SQL"SELECT USU_DESFAM FROM USU_T024FAM WHERE USU_CODFAM = :nCodFam"; 
  cBuscaDesFamlia.AbrirCursor()
  Se(cBuscaDesFamlia.Achou){
    aNomFam = cBuscaDesFamlia.USU_DESFAM;            
  }
  cBuscaDesFamlia.FecharCursor();
    
  
  
  @ Busca Descrição do Motivo @
  Definir Cursor cBuscaMotivo;
  cBuscaMotivo.SQL"SELECT NOMMOT FROM R076MOT WHERE CODMOT = :nCodMot"; 
  cBuscaMotivo.AbrirCursor()
  Se(cBuscaMotivo.Achou){
    aDesMot = cBuscaMotivo.NOMMOT;            
  }
  cBuscaMotivo.FecharCursor(); 
  
  
  historicoCargo.retorno.CriarLinha();
  historicoCargo.retorno.numemp = nNumEmp;
  historicoCargo.retorno.tipcol = nTipCol;
  historicoCargo.retorno.numcad = nNumCad;
  historicoCargo.retorno.datalt = dDatAlt;
  historicoCargo.retorno.estcar = nEstCar;
  historicoCargo.retorno.codcar = aCodCar;
  historicoCargo.retorno.codmot = nCodMot;
  historicoCargo.retorno.stahis = nStaHis;
  historicoCargo.retorno.carvag = aCarVag;
  historicoCargo.retorno.codcrr = nCodCrr;
  historicoCargo.retorno.funeso = aFunEso;
  
  @ Novos Campos @
  historicoCargo.retorno.nomemp = aNomEmp;
  historicoCargo.retorno.descar = aTitCar;
  historicoCargo.retorno.desmot = aDesMot;
  historicoCargo.retorno.codfam = nCodFam;
  historicoCargo.retorno.nomfam = aNomFam;
  
  SQL_Proximo(CUR_R038HCA);  
}
SQL_FecharCursor(CUR_R038HCA);
SQL_Destruir(CUR_R038HCA);  

FinalRegra:

historicoCargo.execucao = aMsgRet;