Definir Alfa CUR_R038CCU;
Definir Alfa aMsgRet;
Definir Alfa aSqlAux;
Definir Alfa aCodCcu;
Definir Alfa aObsAlt;

Definir Numero nNumEmp;

Definir Data dAltIni;
Definir Data dAltFin;
Definir Data dDatAlt;

aMsgRet = "OK";
aSqlAux = "";

dAltIni = historicoCentroCusto.AltIni;
dAltFin = historicoCentroCusto.AltFin;

Se(dAltIni = 0)
{
  aMsgRet = "Informar a Data Inicial de Afastamento através do parâmetro altIni.";
  
  VaPara FinalRegra;
}
Senao Se(dAltFin = 0)
{
  aMsgRet = "Informar a Data Final de Afastamento através do parâmetro altFin.";
  
  VaPara FinalRegra;
}
Senao Se(dAltIni > dAltFin)
{
  aMsgRet = "Data Inicial não pode ser maior que a Data Final.";
  
  VaPara FinalRegra;
}

aSqlAux = "SELECT numemp, tipcol, numcad, datalt, codccu, \                                                
                  stahis, confin, usu_obsalt              \
             FROM R038HCC                                 \                                               
            WHERE DatAlt >= :dAltIni                      \                                              
              AND DatAlt <= :dAltFin                      \
            ORDER BY NumEmp, TipCol, NumCad, DatAlt";

SQL_Criar(CUR_R038CCU);
SQL_UsarSQLSenior2(CUR_R038CCU, 0);
SQL_UsarAbrangencia(CUR_R038CCU, 0);
SQL_DefinirComando(CUR_R038CCU, aSqlAux); 

SQL_DefinirData(CUR_R038CCU, "dAltIni", dAltIni);
SQL_DefinirData(CUR_R038CCU, "dAltFin", dAltFin);

SQL_AbrirCursor(CUR_R038CCU);
Enquanto(SQL_EOF(CUR_R038CCU) = 0) {   
  dDatAlt = 0;
        
  nNumEmp = 0;
  nTipCol = 0;
  nNumCad = 0;
  nCodMot = 0;
  nStaHis = 0;
  nConFin = 0;
  
  aCodCcu = "";
  aObsAlt = "";
   
  SQL_RetornarData(CUR_R038CCU, "datalt", dDatAlt);
    
  SQL_RetornarInteiro(CUR_R038CCU, "numemp", nNumEmp);
  SQL_RetornarInteiro(CUR_R038CCU, "tipcol", nTipCol);
  SQL_RetornarInteiro(CUR_R038CCU, "numcad", nNumCad);
  SQL_RetornarInteiro(CUR_R038CCU, "stahis", nStaHis);
  SQL_RetornarInteiro(CUR_R038CCU, "confin", nConFin);
  
  SQL_RetornarAlfa(CUR_R038CCU, "codccu", aCodCcu);
  SQL_RetornarAlfa(CUR_R038CCU, "usu_obsalt", aObsAlt);
  
  Definir Cursor C18CCU;
  Definir Alfa aNomCcu;
  C18CCU.SQL"SELECT NOMCCU FROM R018CCU \
              WHERE NUMEMP = :nNumEmp \
                AND CODCCU = :aCodCcu";
  C18CCU.AbrirCursor()
  Se(C18CCU.Achou){
    aNomCcu = C18CCU.NomCcu;
  }
  C18CCU.FecharCursor();
  
  historicoCentroCusto.retorno.CriarLinha();
  historicoCentroCusto.retorno.numemp = nNumEmp;
  historicoCentroCusto.retorno.tipcol = nTipCol;
  historicoCentroCusto.retorno.numcad = nNumCad;
  historicoCentroCusto.retorno.datalt = dDatAlt;
  historicoCentroCusto.retorno.codccu = aCodCcu;
  historicoCentroCusto.retorno.nomccu = aNomCcu; 
  historicoCentroCusto.retorno.stahis = nStaHis;
  historicoCentroCusto.retorno.confin = nConFin;
  historicoCentroCusto.retorno.usu_obsalt = aObsAlt;
  
  SQL_Proximo(CUR_R038CCU);  
}
SQL_FecharCursor(CUR_R038CCU);
SQL_Destruir(CUR_R038CCU);  

FinalRegra:

historicoCentroCusto.execucao = aMsgRet;