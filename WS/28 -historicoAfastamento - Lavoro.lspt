Definir Alfa CUR_R038AFA;
Definir Alfa aMsgRet;
Definir Alfa aSqlAux;
Definir Alfa aAfaIni;
Definir Alfa aAfaFin;
Definir Alfa aAciant;
Definir Alfa aAtepat;
Definir Alfa aCodcid;
Definir Alfa aCodDoe;
Definir Alfa aCodSub;
Definir Alfa aConTov;
Definir Alfa aEfeRet;
Definir Alfa aEstCon;
Definir Alfa aManRem;
Definir Alfa aMotAlt;
Definir Alfa aMsmMot;
Definir Alfa aNomAte;
Definir Alfa aObsAfa;
Definir Alfa aRegCon;
Definir Alfa aRisNex;
Definir Alfa aExmRet;
Definir Alfa aNroAut;
Definir Alfa aCgcSuc;

Definir Numero nNumEmp;

Definir Data dAfaIni;
Definir Data dAfaFin;
Definir Data dDatAfa;
Definir Data dDatTer;
Definir Data dFimQua;
Definir Data dDatAlt;
Definir Data dDatNex;
Definir Data dDatPar;
Definir Data dDatPer;
Definir Data dDiaBlq;
Definir Data dDiaPrv;

aMsgRet = "OK";
aSqlAux = "";
aAfaIni = "";
aAfaFin = "";

dAfaIni = historicoAfastamento.afaIni;
dAfaFin = historicoAfastamento.afaFin;

Se(dAfaIni = 0) {
  aMsgRet = "Informar a Data Inicial de Afastamento através do parâmetro afaIni.";
  VaPara FinalRegra;
}
Senao Se(dAfaFin = 0) {
  aMsgRet = "Informar a Data Final de Afastamento através do parâmetro afaFin.";
  VaPara FinalRegra;
}
Senao Se(dAfaIni > dAfaFin) {
  aMsgRet = "Data Inicial não pode ser maior que a Data Final.";
  VaPara FinalRegra;
}

ConverteDataBanco (dAfaIni, aAfaIni);
ConverteDataBanco (dAfaFin, aAfaFin);

aSqlAux = "SELECT numemp, tipcol, numcad, datafa, horafa, \                                                
                  datter, horter, prvter, sitafa, caudem, \                                               
                  diajus, fimqua, qhrafa, oriafa, exmret, \                                               
                  contov, obsafa, staatu, motrai, nroaut, \                                               
                  codoem, codsub, datper, sitini, risnex, \                                               
                  datnex, diaprv, codcua, tmacua, datpar, \                                               
                  diablq, seqreg, hrtrcs, coddoe, codate, \                                               
                  acitra, eferet, encafa, tipsuc, cgcsuc, \                                               
                  datalt, sitori, motalt, nomate, orgcla, \                                               
                  regcon, estcon, cgcces, onuces, cgcsin, \                                               
                  onusin, aciant, orimot, numpro, msmmot, \                                               
                  cmpau1, mancgc, manrem, atepat, codcid, \                                               
                  indrem                                  \                                               
             FROM R038AFA                                 \                                               
            WHERE DatAfa >= :dAfaIni                      \                                              
              AND DatAfa <= :dAfaFin                      \
            ORDER BY NumEmp, TipCol, NumCad";

SQL_Criar(CUR_R038AFA);
SQL_UsarSQLSenior2(CUR_R038AFA, 0);
SQL_UsarAbrangencia(CUR_R038AFA, 0);
SQL_DefinirComando(CUR_R038AFA, aSqlAux); 

SQL_DefinirData(CUR_R038AFA, "dAfaIni", dAfaIni);
SQL_DefinirData(CUR_R038AFA, "dAfaFin", dAfaFin);

SQL_AbrirCursor(CUR_R038AFA);
Enquanto(SQL_EOF(CUR_R038AFA) = 0) { 
  dDatAfa = 0;
  dDatTer = 0;
  dPrvTer = 0;
  dFimQua = 0;
  dDatAlt = 0;
  dDatNex = 0;
  dDatPar = 0;
  dDatPer = 0;
  dDiaBlq = 0;
  dDiaPrv = 0;
    
  nHorAfa = 0;
  nHorTer = 0;
  nSitAfa = 0;
  nCauDem = 0;
  nDiaJus = 0;
  nIndRem = 0;
  nQhrAfa = 0;
  nOriAfa = 0;
  nAciTra = 0;
  nCgcCes = 0;
  nCgcSin = 0;
  nCgcSuc = 0;
  nCmpAu1 = 0;
  nCodAte = 0;
  nCodCua = 0;
  nCodOem = 0;
  nEncAfa = 0;
  nHrtRcs = 0;
  nManCgc = 0;
  nMotRai = 0;
  nNumPro = 0;
  nOnuCes = 0;
  nOnuSin = 0;
  nOrgCla = 0;
  nOriMot = 0;
  nSeqReg = 0;
  nSitIni = 0;
  nSitOri = 0;
  nStaAtu = 0;
  nTipSuc = 0;
  nTmaCua = 0;
  nTipCol = 0;
  nNumCad = 0;
  nNumEmp = 0;
  
  aExmRet = "";
  aAciant	= "";
  aAtepat	= "";
  aCodcid	= "";
  aCodDoe	= "";
  aCodSub	= "";
  aConTov	= "";
  aEfeRet	= "";
  aEstCon	= "";
  aManRem	= "";
  aMotAlt	= "";
  aMsmMot	= "";
  aNomAte	= "";
  aObsAfa	= "";
  aRegCon	= "";
  aRisNex	= "";
  aNroAut = "";
  aCgcSuc = "";
  
  SQL_RetornarData(CUR_R038AFA, "datafa", dDatAfa);
  SQL_RetornarData(CUR_R038AFA, "datter", dDatTer);
  SQL_RetornarData(CUR_R038AFA, "prvter", dPrvTer);
  SQL_RetornarData(CUR_R038AFA, "fimqua", dFimQua);
  SQL_RetornarData(CUR_R038AFA, "datalt", dDatAlt);
  SQL_RetornarData(CUR_R038AFA, "datnex", dDatNex);
  SQL_RetornarData(CUR_R038AFA, "datpar", dDatPar);
  SQL_RetornarData(CUR_R038AFA, "datper", dDatPer);
  SQL_RetornarData(CUR_R038AFA, "diablq", dDiaBlq);
  SQL_RetornarData(CUR_R038AFA, "diaprv", dDiaPrv);
  
  SQL_RetornarInteiro(CUR_R038AFA, "numemp", nNumEmp);
  SQL_RetornarInteiro(CUR_R038AFA, "tipcol", nTipCol);
  SQL_RetornarInteiro(CUR_R038AFA, "numcad", nNumCad);
  SQL_RetornarInteiro(CUR_R038AFA, "horafa", nHorAfa);
  SQL_RetornarInteiro(CUR_R038AFA, "horter", nHorTer);
  SQL_RetornarInteiro(CUR_R038AFA, "sitafa", nSitAfa);
  SQL_RetornarInteiro(CUR_R038AFA, "caudem", nCauDem);
  SQL_RetornarInteiro(CUR_R038AFA, "diajus", nDiaJus);
  SQL_RetornarInteiro(CUR_R038AFA, "indrem", nIndrem);
  SQL_RetornarInteiro(CUR_R038AFA, "qhrafa", nQhrAfa);
  SQL_RetornarInteiro(CUR_R038AFA, "oriafa", nOriAfa);
  SQL_RetornarInteiro(CUR_R038AFA, "acitra", nAciTra);
  SQL_RetornarInteiro(CUR_R038AFA, "cgcces", nCgcCes);
  SQL_RetornarInteiro(CUR_R038AFA, "cgcsin", nCgcSin);
  SQL_RetornarInteiro(CUR_R038AFA, "cgcsuc", nCgcSuc);
  SQL_RetornarInteiro(CUR_R038AFA, "cmpau1", nCmpAu1);
  SQL_RetornarInteiro(CUR_R038AFA, "codate", nCodAte);
  SQL_RetornarInteiro(CUR_R038AFA, "codcua", nCodCua);
  SQL_RetornarInteiro(CUR_R038AFA, "codoem", nCodOem);
  SQL_RetornarInteiro(CUR_R038AFA, "encafa", nEncAfa);
  SQL_RetornarInteiro(CUR_R038AFA, "hrtrcs", nHrtRcs);
  SQL_RetornarInteiro(CUR_R038AFA, "mancgc", nManCgc);
  SQL_RetornarInteiro(CUR_R038AFA, "motrai", nMotRai);
  SQL_RetornarInteiro(CUR_R038AFA, "numpro", nNumPro);
  SQL_RetornarInteiro(CUR_R038AFA, "onuces", nOnuCes);
  SQL_RetornarInteiro(CUR_R038AFA, "onusin", nOnuSin);
  SQL_RetornarInteiro(CUR_R038AFA, "orgcla", nOrgCla);
  SQL_RetornarInteiro(CUR_R038AFA, "orimot", nOriMot);
  SQL_RetornarInteiro(CUR_R038AFA, "seqreg", nSeqReg);
  SQL_RetornarInteiro(CUR_R038AFA, "sitini", nSitIni);
  SQL_RetornarInteiro(CUR_R038AFA, "sitori", nSitOri);
  SQL_RetornarInteiro(CUR_R038AFA, "staatu", nStaAtu);
  SQL_RetornarInteiro(CUR_R038AFA, "tipsuc", nTipSuc);
  SQL_RetornarInteiro(CUR_R038AFA, "tmacua", nTmaCua);

  SQL_RetornarAlfa(CUR_R038AFA, "exmret", aExmRet);
  SQL_RetornarAlfa(CUR_R038AFA, "aciant", aAciant);
  SQL_RetornarAlfa(CUR_R038AFA, "atepat", aAtepat);
  SQL_RetornarAlfa(CUR_R038AFA, "codcid", aCodcid);
  SQL_RetornarAlfa(CUR_R038AFA, "coddoe", aCodDoe);
  SQL_RetornarAlfa(CUR_R038AFA, "codsub", aCodSub);
  SQL_RetornarAlfa(CUR_R038AFA, "contov", aConTov);
  SQL_RetornarAlfa(CUR_R038AFA, "eferet", aEfeRet);
  SQL_RetornarAlfa(CUR_R038AFA, "estcon", aEstCon);
  SQL_RetornarAlfa(CUR_R038AFA, "manrem", aManRem);
  SQL_RetornarAlfa(CUR_R038AFA, "motalt", aMotAlt);
  SQL_RetornarAlfa(CUR_R038AFA, "msmmot", aMsmMot);
  SQL_RetornarAlfa(CUR_R038AFA, "nomate", aNomAte);
  SQL_RetornarAlfa(CUR_R038AFA, "obsafa", aObsAfa);
  SQL_RetornarAlfa(CUR_R038AFA, "regcon", aRegCon);
  SQL_RetornarAlfa(CUR_R038AFA, "risnex", aRisNex);
  SQL_RetornarAlfa(CUR_R038AFA, "nroaut", aNroAut);
  
  ConverteMascara (1, nCgcSuc, aCgcSuc, "Z99999999999999");
  
  
  @ =================================================== @
  @ CH - 229177 - Inclusão de campos para retorno do WS @
  @ Evanderson Pereira * 10/10/2024                     @
  @ =================================================== @
  
  /*
  Campos solicitados: 
  Porta - caracteristicaPosto 
  
  * Descrição da Situação
  * Descrição da Causa de Demissão
  * Nome Empresa
  
  */
  
  Definir Alfa aSitAfa;
  Definir Alfa aCauDem;
  Definir Alfa aNomEmp; 
  
  aSitAfa = "";
  aCauDem = "";
  aNomEmp = "";
  
  @ Busca Descrição da situação @
  Definir Cursor cBuscaSit;
  cBuscaSit.SQL"SELECT DESSIT FROM R010SIT WHERE CODSIT = :nSitAfa";
  cBuscaSit.AbrirCursor()
  Se(cBuscaSit.Achou){
    aSitAfa = cBuscaSit.DESSIT;
  }
  cBuscaSit.FecharCursor();
   
  
  @ Busca descrição da causa de demissão @
  Definir Cursor cBuscaCauDem;
  cBuscaCauDem.SQL"SELECT DESDEM FROM R042CAU WHERE CAUDEM = :nCauDem";
  cBuscaCauDem.AbrirCursor()
  Se(cBuscaCauDem.Achou){
    aCauDem = cBuscaCauDem.DESDEM;
  }
  cBuscaCauDem.FecharCursor();
  
  @ Busca o nome da empresa @
  Definir Cursor cBuscaEmpresa; 
  cBuscaEmpresa.SQL"SELECT NOMEMP FROM R030EMP WHERE NUMEMP = :nNumEmp";
  cBuscaEmpresa.AbrirCursor()
  Se(cBuscaEmpresa.Achou){
    aNomEmp = cBuscaEmpresa.NOMEMP;    
  }
  cBuscaEmpresa.FecharCursor();
  
  
  historicoAfastamento.retorno.CriarLinha();
  historicoAfastamento.retorno.numemp = nNumEmp;
  historicoAfastamento.retorno.tipcol = nTipCol;
  historicoAfastamento.retorno.numcad = nNumCad;
  historicoAfastamento.retorno.datafa = dDatAfa;
  historicoAfastamento.retorno.horafa = nHorAfa;
  historicoAfastamento.retorno.datter = dDatTer;
  historicoAfastamento.retorno.horter = nHorTer;
  historicoAfastamento.retorno.prvter = dPrvTer;
  historicoAfastamento.retorno.sitafa = nSitAfa;
  historicoAfastamento.retorno.caudem = nCauDem;
  historicoAfastamento.retorno.diajus = nDiaJus;
  historicoAfastamento.retorno.fimqua = dFimQua;
  historicoAfastamento.retorno.qhrafa = nQhrAfa;
  historicoAfastamento.retorno.oriafa = nOriAfa;
  historicoAfastamento.retorno.exmret = aExmRet;
  historicoAfastamento.retorno.contov = aConTov;
  historicoAfastamento.retorno.obsafa = aObsAfa;
  historicoAfastamento.retorno.staatu = nStaAtu;
  historicoAfastamento.retorno.motrai = nMotRai;
  historicoAfastamento.retorno.nroaut = aNroAut;
  historicoAfastamento.retorno.codoem = nCodOem;
  historicoAfastamento.retorno.codsub = aCodSub;
  historicoAfastamento.retorno.datper = dDatPer;
  historicoAfastamento.retorno.sitini = nSitIni;
  historicoAfastamento.retorno.risnex = aRisNex;
  historicoAfastamento.retorno.datnex = dDatNex;
  historicoAfastamento.retorno.diaprv = dDiaPrv;
  historicoAfastamento.retorno.codcua = nCodCua;
  historicoAfastamento.retorno.tmacua = nTmaCua;
  historicoAfastamento.retorno.datpar = dDatPar;
  historicoAfastamento.retorno.diablq = dDiaBlq;
  historicoAfastamento.retorno.seqreg = nSeqReg;
  historicoAfastamento.retorno.hrtrcs = nHrtRcs;
  historicoAfastamento.retorno.coddoe = aCodDoe;
  historicoAfastamento.retorno.codcid = aCodCid;
  historicoAfastamento.retorno.codate = nCodAte;
  historicoAfastamento.retorno.acitra = nAciTra;
  historicoAfastamento.retorno.eferet = aEfeRet;
  historicoAfastamento.retorno.encafa = nEncAfa;
  historicoAfastamento.retorno.tipsuc = nTipSuc;
  historicoAfastamento.retorno.cgcsuc = aCgcSuc;
  historicoAfastamento.retorno.datalt = dDatAlt;
  historicoAfastamento.retorno.sitori = nSitOri;
  historicoAfastamento.retorno.motalt = aMotAlt;
  historicoAfastamento.retorno.nomate = aNomAte;
  historicoAfastamento.retorno.orgcla = nOrgCla;
  historicoAfastamento.retorno.regcon = aRegCon;
  historicoAfastamento.retorno.estcon = aEstCon;
  historicoAfastamento.retorno.cgcces = nCgcCes;
  historicoAfastamento.retorno.onuces = nOnuCes;
  historicoAfastamento.retorno.cgcsin = nCgcSin;
  historicoAfastamento.retorno.onusin = nOnuSin;
  historicoAfastamento.retorno.aciant = aAciAnt;
  historicoAfastamento.retorno.orimot = nOriMot;
  historicoAfastamento.retorno.numpro = nNumPro;
  historicoAfastamento.retorno.msmmot = aMsmMot;
  historicoAfastamento.retorno.cmpau1 = nCmpAu1;
  historicoAfastamento.retorno.mancgc = nManCgc;
  historicoAfastamento.retorno.manrem = aManRem;
  historicoAfastamento.retorno.atepat = aAtePat;
  historicoAfastamento.retorno.indrem = nIndRem;
  
  @ Novos Campos @
  historicoAfastamento.retorno.dessit = aSitAfa;
  historicoAfastamento.retorno.descaudem = aCauDem;
  historicoAfastamento.retorno.nomemp = aNomEmp;

  SQL_Proximo(CUR_R038AFA);  
}
SQL_FecharCursor(CUR_R038AFA);
SQL_Destruir(CUR_R038AFA);  

FinalRegra:

historicoAfastamento.execucao = aMsgRet;